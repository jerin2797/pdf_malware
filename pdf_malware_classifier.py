#!/usr/bin/env python
# coding: utf-8

# In[1]:


from pandas import read_csv
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.metrics import confusion_matrix, precision_score,recall_score,f1_score,classification_report
from feature_extraction import feature_extraction


# In[3]:



df = read_csv('pdfdataset_n.csv')
df.head()


# In[5]:


X = df.iloc[:, 0: 21]
y = df.iloc[:, 21]


# In[6]:


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)


# In[7]:


clf = RandomForestClassifier()
clf.fit(X_train, y_train)
y_pred = clf.predict(X_test)
acs = accuracy_score(y_test, y_pred)
cm = confusion_matrix(y_test, y_pred)



# In[8]:




# In[9]:


from sklearn.svm import SVC
svclassifier = SVC(kernel='linear')
svclassifier.fit(X_train, y_train)


# In[10]:


svcpred = svclassifier.predict(X_test)



# In[11]:





# In[12]:


from sklearn.tree import DecisionTreeClassifier
classifier = DecisionTreeClassifier()
classifier.fit(X_train, y_train)


# In[13]:


dtpred=classifier.predict(X_test)



# In[14]:
)


# In[15]:


from sklearn.linear_model import LogisticRegression
loclf=LogisticRegression()
loclf.fit(X_train,y_train)
lopred=loclf.predict(X_test)


# In[16]:





# In[18]:


path = 'samplepdf1.pdf'
features = feature_extraction(path)
result = clf.predict(features)



# In[19]:


import numpy as np
path2='test10.pdf'
features2=feature_extraction(path2)



# In[20]:


res=clf.predict(features2)











